---
name: CI

env:
  IMAGE_NAME: research-template
  IMAGE_VERSION: v0
  PUBLIC_IMAGE_NAME: ghcr.io/opensafely-core/research-template
  REGISTRY: ghcr.io

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]
  schedule:
    - cron: "0 12 * * SUN"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf  # v3.1.0
        # Lint the dockerfile before building
        with:
          failure-threshold: error
      - uses: "opensafely-core/setup-action@v1"
        with:
          install-just: true

      - name: Build docker image
        run: just build

      - name: Test docker image
        run: just smoke-test

      - name: Save docker image
        run: |
          docker save research-template | pigz --fast > /tmp/research-template.tar.gz

      - name: Upload docker image
        uses: actions/upload-artifact@v4
        with:
            name: research-template-image
            path: /tmp/research-template.tar.gz
            # Disable compression; the file is already compressed
            compression-level: 0

  test-packages:
    needs: [build-and-test]
    runs-on: ubuntu-latest

    steps:
    - name: Download Docker image
      uses: actions/download-artifact@v4
      with:
        name: research-template-image
        path: /tmp/image

    - name: Import Docker image
      run: docker load --input /tmp/image/research-template.tar.gz

    - name: Tag Docker image for use with dev container
      run: docker tag "$IMAGE_NAME" "$PUBLIC_IMAGE_NAME:$IMAGE_VERSION"

    - name: Checkout research template repository
      uses: actions/checkout@v4
      with:
        repository: opensafely/research-template

    - name: Checkout research-template-docker repository in subdirectory
      uses: actions/checkout@v4
      with:
        path: 'research-template/research-template-docker'

    - name: Install demjson package for jsonlint
      # Necessary because jq doesn't yet have an option to strip comments.
      # See https://github.com/jqlang/jq/issues/1571
      run: |
        sudo apt-get update
        sudo apt-get install python3-demjson

    - name: Check that we have correct version of image in devcontainer.json
      run: |
        devcontainer_image=$(jsonlint --allow comments --format-compactly ".devcontainer/devcontainer.json" | jq --raw-output .image)
        test "$devcontainer_image" = "$PUBLIC_IMAGE_NAME:$IMAGE_VERSION"

    # It is necessary to run these tests in the dev container,
    # because they currently require Docker to correctly discover
    # the state of the Python packages in the Python action image.
    - name: Build and run dev container task
      uses: devcontainers/ci@a56d055efecd725e8cfe370543b6071b79989cc8 # v0.3.1900000349
      with:
        runCmd: ./research-template/research-template-docker/tests/packages.sh

  publish:
    needs: [build-and-test, test-packages]

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4
      - uses: "opensafely-core/setup-action@v1"
        with:
          install-just: true

      - name: Download docker image
        uses: actions/download-artifact@v4
        with:
            name: research-template-image
            path: /tmp/image

      - name: Import docker image
        run: docker load --input /tmp/image/research-template.tar.gz

      - name: Publish image
        run: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login "$REGISTRY" -u ${{ github.actor }} --password-stdin
            docker tag "$IMAGE_NAME" "$PUBLIC_IMAGE_NAME:$IMAGE_VERSION"
            docker tag "$IMAGE_NAME" "$PUBLIC_IMAGE_NAME:latest"
            docker push "$PUBLIC_IMAGE_NAME:$IMAGE_VERSION"
            docker push "$PUBLIC_IMAGE_NAME:latest"
